project_name: minecraft-exporter

env:
  - DESCRIPTION="Prometheus Minecraft exporter"
  - README_URL="https://raw.githubusercontent.com/dirien/minecraft-prometheus-exporter/main/README.md"

before:
  hooks:
    - go mod tidy

archives:
  - name_template: "{{ .ProjectName }}_{{ .Version }}.{{ .Os }}-{{ .Arch }}"

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X github.com/prometheus/common/version.Version={{.Version}}
      - -s -w -X github.com/prometheus/common/version.Revision={{.Commit}}
      - -s -w -X github.com/prometheus/common/version.Branch={{.Branch}}
      - -s -w -X github.com/prometheus/common/version.BuildUser=goreleaser
      - -s -w -X github.com/prometheus/common/version.BuildDate={{.Date}}

dockers:
  - image_templates:
      - "ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.licenses='Apache-2.0'
      - --label=org.opencontainers.image.description={{.Env.DESCRIPTION}}
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=io.artifacthub.package.maintainers='[{"name":"Engin Diri","email":"engin.diri@ediri.de"}]'
      - --label=io.artifacthub.package.readme-url={{.Env.README_URL}}
      - --label=io.artifacthub.package.logo-url='https://dirien.github.io/minecraft-prometheus-exporter/img/chart-logo.png'
      - --label=io.artifacthub.package.keywords='minecraft,prometheus,exporter'
      - --label=io.artifacthub.package.license='Apache-2.0'
  - image_templates:
      - "ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-arm64"
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/arm64/v8
      - --label=org.opencontainers.image.licenses='Apache-2.0'
      - --label=org.opencontainers.image.description={{.Env.DESCRIPTION}}
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=io.artifacthub.package.maintainers='[{"name":"Engin Diri","email":"engin.diri@ediri.de"}]'
      - --label=io.artifacthub.package.readme-url={{.Env.README_URL}}
      - --label=io.artifacthub.package.logo-url='https://dirien.github.io/minecraft-prometheus-exporter/img/chart-logo.png'
      - --label=io.artifacthub.package.keywords='minecraft,prometheus,exporter'
      - --label=io.artifacthub.package.license='Apache-2.0'

docker_manifests:
  - name_template: 'ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}'
    image_templates:
      - 'ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-amd64'
      - 'ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-arm64'
  - name_template: 'ghcr.io/dirien/{{ .ProjectName }}:latest'
    image_templates:
      - 'ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-amd64'
      - 'ghcr.io/dirien/{{ .ProjectName }}:{{ .Version }}-arm64'

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

checksum:
  name_template: 'checksums.txt'

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
    artifacts: checksum
    output: true

docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: manifests
    output: true
    args:
      - 'sign'
      - '${artifact}'

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^test:'
      - '^chore'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 10
    - title: Other work
      order: 999
