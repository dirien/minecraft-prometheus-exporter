# Default values for minecraft-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (int) Numbers of replicas
replicaCount: 1

rbac:
  # -- Specifies whether RBAC resources should be created
  create: true
  # -- Specifies to enable pod security policy
  pspEnabled: true
  # -- Specifies to enable use AppArmor
  pspUseAppArmor: true
serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

image:
  # -- The docker image repository to use
  repository: ghcr.io/dirien/minecraft-exporter
  # -- The docker image tag to use
  # @default Chart version
  tag: ''
  # -- The docker image pull policy
  pullPolicy: IfNotPresent

# -- String to override the default generated name
nameOverride: ""
# -- String to override the default generated fullname
fullnameOverride: ""

# -- Flags - for a list visit https://github.com/dirien/minecraft-prometheus-exporter#usage-
options: []

service:
  # -- Specifies what type of Service should be created
  type: ClusterIP
  # -- Default Service port
  port: 9150
  # -- Additional annotations
  annotations: {}

ingress:
  # -- Specifies what type of Ingress should be created
  enabled: false
  # -- Additional annotations
  annotations: {}
  # -- Ingress path
  path: /
  # -- Ingress host
  hosts:
    - chart-example.local
  # -- Ingress tls
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Set the resources requests and limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

serviceMonitor:
  # -- When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set path to minecraft-exporter telemtery-path
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s
  # Set of labels to transfer on the Kubernetes Service onto the target.
  # targetLabels: []
  # metricRelabelings: []

# -- Set the node selector for the pod.
nodeSelector: {}

# -- Set the tolerations for the pod.
tolerations: []

# -- Set the affinity for the pod.
affinity: {}

# -- Extra environment variables
extraEnv: []

# -- Annotations for the pods
podAnnotations: {}

# -- Init Containers for Exporter Pod
initContainers: []

# -- Extra containers for the exporter pod
extraContainers: []

# -- Extra Volumes for the pod
extraVolumes:
# - name: mc-world
#   persistentVolumeClaim:
#     claimName: task-pv-volume
# - name: example
#   configMap:
#     name: example

# -- Extra Volume Mounts for the exporter container
extraVolumeMounts:
# - name: mc-world
#   mountPath: /minecraft
# - name: example
#   mountPath: /example
